{"version":3,"sources":["redux/slices/userSlice.js","redux/slices/roundsSlice.js","redux/slices/golfBuddiesSlice.js","redux/slices/commentsSlice.js","redux/store/store.js","auth/LoginForm.js","auth/AuthWrapper1.js","auth/LoginPage.js","auth/RegisterPage.js","pages/MainPage.js","components/LeftSidebar.js","components/Layout.js","pages/GolfBuddies.js","App.js","redux/redux_components/Comment1.js","redux/redux_components/Modal1.js","redux/redux_components/RoundsForMain1.js","redux/redux_components/AddRound1.js","redux/redux_pages/MainPage1.js","redux/redux_components/FriendsList1.js","redux/redux_pages/GolfBuddies1.js","redux/redux_components/Rounds1.js","redux/redux_pages/Profile1.js","redux/redux_pages/MyAccount1.js","redux/redux_components/LeftSidebar1.js","redux/redux_components/FriendSearch1.js","redux/redux_components/RightSidebar1.js","redux/redux_components/Layout1.js","redux/redux_auth/LoginForm1.js","redux/redux_auth/LoginWrapper.js","redux/redux_auth/LoginPage1.js","redux/redux_auth/RegisterForm1.js","redux/redux_auth/RegisterPage1.js","redux/redux_auth/ForgotPasswordForm1.js","redux/redux_auth/ForgotPasswordPage1.js","redux/redux_auth/ResetPasswordForm1.js","redux/redux_auth/ResetPasswordPage1.js","redux/App1.js","reportWebVitals.js","index.js"],"names":["fetchUser","createAsyncThunk","a","fetch","response","json","data","updateUser","updatedData","method","headers","body","JSON","stringify","fetchUserById","userId","fetchAllUsers","loginUser","userData","rejectWithValue","status","error","registerUser","errors","logOut","userSlice","createSlice","name","initialState","loggedUser","isAuthenticated","isFetching","allUsers","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectLoggedUser","user","selectAllUsers","selectFetchUserById","fetchRounds","addPost","newPost","deletePost","id","updatePost","updatedPost","roundsSlice","filter","post","map","unshift","selectRounds","rounds","fetchGolfBuddies","addGolfBuddy","newBuddy","deleteGolfBuddy","buddyId","golfBuddiesSlice","push","buddy","selectGolfBuddies","golfBuddies","fetchComments","addComment","newComment","addedComment","updateComment","updatedComment","updated","deleteComment","commentsSlice","existingComment","find","comment","Object","assign","existingCommentIndex","findIndex","splice","selectComments","comments","configureStore","reducer","userReducer","roundsReducer","golfBuddiesReducer","LoginForm","styled","theme","backgroundColor","minHeight","LoginPage","RegisterPage","MainPage","LeftSidebar","Layout","GolfBuddies","App","Comment1","dispatch","useDispatch","created_at","useState","anchorEl","setAnchorEl","openIcon","Boolean","open","padding","sx","Grid","container","flexWrap","item","paddingRight","src","profile_pic","alt","width","flexGrow","justifyContent","alignItems","display","Typography","fontSize","fontWeight","mr","first_name","last_name","color","username","IconButton","aria-expanded","undefined","onClick","e","preventDefault","currentTarget","Menu","onClose","stopPropagation","MenuListProps","MenuItem","Modal1","children","handleClose","handleSave","saveText","len","useTheme","Box","Dialog","fullWidth","maxWidth","DialogTitle","textAlign","borderBottom","DialogContent","DialogActions","Button","disabled","variant","size","borderRadius","shape","RoundsForMain1","onDeletePost","allcomments","useSelector","commentText","setCommentText","menuAnchorEl","setMenuAnchorEl","modalOpen","setModalOpen","openMenu","description","date","course","formattedCreatedAt","moment","format","formattedDate","roundComments","round","to","marginRight","marginTop","trimStart","length","user_id","round_id","then","marginLeft","Input","onChange","target","value","multiline","rows","type","placeholder","defaultValues","Date","AddRound1","setPosts","postValues","setPostValues","onSubmit","toISOString","toString","xs","md","InputLabel","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","renderInput","props","TextField","disablePast","required","paddingLeft","Select","labelId","paddingBottom","paddingTop","MainPage1","friendsPosts","sort","b","posts","handleDeletePost","postId","idsArray","arr","key","friendIds","friends","i","postsArray","eachPostsArray","flat","useEffect","height","overflowY","marginX","style","Link","component","RouterLink","FriendsList1","friend","setDisabled","margin","textTransform","ml","background","golfBuddyToDelete","golfBuddy","friend_id","currentState","GolfBuddies1","Profile1","useParams","position","top","left","handicap","htmlColor","city","palette","primary","main","MyAccount1","currentUser","email","updateUserForm","setUpdateUserForm","handleChange","handleSubmit","catch","justify","direction","marginBottom","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","label","LeftSidebar1","history","useHistory","isSmallerScreen","useMediaQuery","breakpoints","down","handleLogOut","resultAction","match","console","flexDirection","bottom","right","boxShadow","zIndex","textDecoration","Hidden","lgDown","ListItemText","primaryTypographyProps","active","List","ListItem","button","ListItemIcon","FriendsSearch1","searchDisabled","setSearchDisabled","some","friendDisabled","setFriendDisabled","friendIdsArray","handleAddFriend","includes","RightSidebar1","search","setSearch","renderUsers","toLowerCase","slice","border","inputProps","disableUnderline","Search","Layout1","values","lg","spacing","borderLeft","borderRight","initialForm","password","LoginForm1","showPassword","setShowPassword","loginAccount","setLoginAccount","setErrors","handleLoginChange","FormControl","htmlFor","OutlinedInput","endAdornment","aria-label","onMouseDown","event","edge","Stack","cursor","mt","disableElevation","result","LoginWrapper","LoginPage1","matchDownSM","m","sm","mb","Card","flexBasis","borderColor","success","p","xl","gutterBottom","Divider","RegisterForm1","createAccountForm","setCreateAccountForm","handleCreateChange","noValidate","index","defaultValue","typography","customInput","RegisterPage1","ForgotPasswordForm1","forgotPassword","setForgotPassword","credentials","r","ok","err","ForgotPasswordPage1","token","ResetPasswordForm1","resetPassword","setResetPassword","handleResetPasswordChange","ResetPasswordPage1","App1","isLoggedIn","LinearProgress","className","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.048c800a.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst initialState = {\n  data: null, // Fetched user data for any user and logged-in user\n  loggedUser: null, // Logged-in user data\n  isAuthenticated: false,\n  isFetching: false,\n  allUsers: [], // Array of all users\n  loading: false,\n  error: null,\n};\n\nexport const fetchUser = createAsyncThunk('user/fetchUser', async () => {\n  const response = await fetch('/api/me');\n  const data = await response.json();\n  return data;\n});\n\nexport const updateUser = createAsyncThunk('user/updateUser', async (updatedData) => {\n  const response = await fetch('/api/me', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(updatedData),\n  });\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchUserById = createAsyncThunk('user/fetchUserById', async (userId) => {\n  const response = await fetch(`/api/users/${userId}`);\n  const data = await response.json();\n  return data;\n});\n\nexport const fetchAllUsers = createAsyncThunk('user/fetchAllUsers', async () => {\n  const response = await fetch('/api/users');\n  const data = await response.json();\n  return data;\n});\n\nexport const loginUser = createAsyncThunk('user/loginUser', async (userData, { rejectWithValue }) => {\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (response.status === 401) {\n    const error = await response.json();\n    return rejectWithValue(error);\n  }\n\n  const data = await response.json();\n\n  return data;\n});\n\nexport const registerUser = createAsyncThunk('user/registerUser', async (userData, { rejectWithValue }) => {\n  const response = await fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (response.status === 422) {\n    const errors = await response.json();\n  \n    return rejectWithValue(errors);\n  }\n\n  const data = await response.json();\n  \n  return data;\n});\n\n\nexport const logOut = createAsyncThunk('user/logOut', async () => {\n  await fetch('/api/logout', {\n    method: 'DELETE',\n  });\n  \n  return null;\n});\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUser.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n        state.loggedUser = action.payload;\n        \n      })\n      .addCase(fetchUser.rejected, (state) => {\n        state.loading = false;\n        state.data = null;\n        state.loggedUser = null;\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n\n      .addCase(fetchUserById.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchAllUsers.fulfilled, (state, action) => {\n        state.allUsers = action.payload;\n      })\n      .addCase(logOut.fulfilled, (state) => {\n        state.loggedUser = null\n        state.isAuthenticated = false\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n        state.loggedUser = action.payload\n        state.isAuthenticated = true\n        \n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload.error;\n        state.isAuthenticated = false;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n        state.loggedUser = action.payload\n        state.isAuthenticated = true\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload.errors;\n        state.isAuthenticated = false;\n      })\n  },\n});\n\nexport const selectUser = (state) => state.user;\nexport const selectLoggedUser = (state) => state.user.loggedUser\nexport const selectAllUsers = (state) => state.user.allUsers;\nexport const selectFetchUserById = (state) => state.user\nexport const selectIsAuthenticated = (state) => state.user.isAuthenticated;\n\n\n\nexport default userSlice.reducer;\n\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchRounds = createAsyncThunk('rounds/fetchRounds', async () => {\n  const response = await fetch('/api/rounds');\n  const data = await response.json();\n  return data;\n});\n\nexport const addPost = createAsyncThunk('rounds/addPost', async (newPost) => {\n  const response = await fetch('/api/rounds', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPost),\n  });\n  const data = await response.json();\n  return data;\n});\n\nexport const deletePost = createAsyncThunk('rounds/deletePost', async (id) => {\n  const response = await fetch(`/api/rounds/${id}`, {\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  return data;\n});\n\nexport const updatePost = createAsyncThunk('rounds/updatePost', async (updatedPost) => {\n  const response = await fetch(`/api/rounds/${updatedPost.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(updatedPost),\n  });\n  const data = await response.json();\n  return data;\n});\n\nexport const roundsSlice = createSlice({\n  name: 'rounds',\n  initialState: { data: [], loading: true },\n  reducers: {\n    deletePost: (state, action) => {\n      const id = action.payload;\n      state.data = state.data.filter(post => post.id !== id);\n    },\n    updatePost: (state, action) => {\n      const updatedPost = action.payload;\n      state.data = state.data.map(post => post.id === updatedPost.id ? updatedPost : post);\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRounds.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchRounds.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchRounds.rejected, (state) => {\n        state.loading = false;\n        state.data = [];\n      })\n      .addCase(addPost.fulfilled, (state, action) => {\n        state.data.unshift(action.payload);\n      })\n      .addCase(deletePost.fulfilled, (state, action) => {\n        const id = action.payload;\n        state.data = state.data.filter(post => post.id !== id);\n      })\n      .addCase(updatePost.fulfilled, (state, action) => {\n        const updatedPost = action.payload;\n        state.data = state.data.map(post => post.id === updatedPost.id ? updatedPost : post);\n      });\n  },\n});\n\n\nexport const selectRounds = (state) => state.rounds;\n\nexport default roundsSlice.reducer;\n\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchGolfBuddies = createAsyncThunk('golfBuddies/fetchGolfBuddies', async () => {\n  const response = await fetch('/api/golf_buddies');\n  const data = await response.json();\n  return data;\n});\n\nexport const addGolfBuddy = createAsyncThunk(\n  'golfBuddies/addGolfBuddy',\n  async (newBuddy) => {\n    const response = await fetch(`/api/golf_buddies`, {\n      method: 'POST',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBuddy)\n    });\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const deleteGolfBuddy = createAsyncThunk(\n  'golfBuddies/deleteGolfBuddy',\n  async (buddyId) => {\n    const response = await fetch(`/api/golf_buddies/${buddyId}`, {\n      method: 'DELETE',\n    });\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const golfBuddiesSlice = createSlice({\n  name: 'golfBuddies',\n  initialState: { data: [], loading: true },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchGolfBuddies.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchGolfBuddies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchGolfBuddies.rejected, (state) => {\n        state.loading = false;\n        state.data = [];\n      })\n      .addCase(addGolfBuddy.fulfilled, (state, action) => {\n        state.data.push(action.payload);\n      })\n      .addCase(deleteGolfBuddy.fulfilled, (state, action) => {\n        state.data = state.data.filter(buddy => buddy.id !== action.payload.id);\n      })\n  },\n});\n\nexport const selectGolfBuddies = (state) => state.golfBuddies;\n\nexport default golfBuddiesSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async () => {\n  const response = await fetch('/api/comments');\n  const data = await response.json();\n  return data;\n});\n\nexport const addComment = createAsyncThunk('comments/addComment', async (newComment) => {\n  const response = await fetch('/api/comments', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(newComment),\n  });\n  const addedComment = await response.json();\n  return addedComment;\n});\n\nexport const updateComment = createAsyncThunk('comments/updateComment', async ({ id, updatedComment }) => {\n  const response = await fetch(`/api/comments/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(updatedComment),\n  });\n  const updated = await response.json();\n  return updated;\n});\n\nexport const deleteComment = createAsyncThunk('comments/deleteComment', async (id) => {\n  await fetch(`/api/comments/${id}`, {\n    method: 'DELETE',\n  });\n  return id;\n});\n\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState: { data: [], loading: true },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchComments.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchComments.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchComments.rejected, (state) => {\n        state.loading = false;\n        state.data = [];\n      })\n      .addCase(addComment.fulfilled, (state, action) => {\n        state.data.unshift(action.payload);\n      })\n      .addCase(updateComment.fulfilled, (state, action) => {\n        const { id, ...updatedComment } = action.payload;\n        const existingComment = state.data.find((comment) => comment.id === id);\n        if (existingComment) {\n          Object.assign(existingComment, updatedComment);\n        }\n      })\n      .addCase(deleteComment.fulfilled, (state, action) => {\n        const id = action.payload;\n        const existingCommentIndex = state.data.findIndex((comment) => comment.id === id);\n        if (existingCommentIndex !== -1) {\n          state.data.splice(existingCommentIndex, 1);\n        }\n      });\n  },\n});\n\nexport const selectComments = (state) => state.comments;\n\nexport default commentsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../slices/userSlice';\nimport roundsReducer from '../slices/roundsSlice';\nimport golfBuddiesReducer from '../slices/golfBuddiesSlice';\nimport commentsSlice from '../slices/commentsSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    rounds: roundsReducer,\n    golfBuddies: golfBuddiesReducer,\n    comments: commentsSlice,\n  },\n});\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//material-ui\n\nimport {\n    Box,\n    Button,\n    FormControl,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n} from '@mui/material';\n\n//third party\n\nimport { Formik } from 'formik';\n\n//assets\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst initialForm = {\n    username: \"\",\n    password: \"\",\n  }\n\nfunction LoginForm({ onCreateOrLog, responseFromAccountOrLogged }) {\n    const [showPassword, setShowPassword] = useState(false);\n    const [loginAccount, setLoginAccount] = useState(initialForm);\n    const [errors, setErrors] = useState(null);\n\n  function handleLoginChange(e) {\n    const target = e.target.name;\n    const value = e.target.value;\n    setLoginAccount({ ...loginAccount, [target]: value });\n  }\n\n  function handleLoginSubmit(e) {\n    e.preventDefault();\n\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      body: JSON.stringify(loginAccount),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          setErrors(null);\n          setLoginAccount(initialForm);\n          onCreateOrLog(user);\n        });\n      } else {\n        r.json().then((err) => {\n          setLoginAccount(initialForm);\n          setErrors(err);\n        });\n      }\n    });\n  }\n\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n\n\n    return (\n        <>\n            \n            <Formik>\n                    <form>\n                        <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-username-login\">Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-username-login\"\n                                type=\"username\"\n                                name=\"username\"\n                                label=\"Username\"\n                                inputProps={{}}\n                                value={loginAccount.username}\n                                onChange={handleLoginChange}\n                               \n                            />\n                        </FormControl>\n                        <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                name=\"password\"\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"small\"\n                                        >\n                                            {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                value={loginAccount.password}\n                                onChange={handleLoginChange}\n                                inputProps={{}}\n                                \n                            />\n                            </FormControl>\n                            {errors ? <p>{errors.error}</p> : null}\n                            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <Typography \n                            component={Link}\n                            to=\"/forgot_password\" \n                            variant=\"subtitle1\" \n                            color=\"success.light\" \n                            sx={{ textDecoration: 'none', cursor: 'pointer' }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        \n                        <Box sx={{ mt: 2 }}>\n                            \n                                <Button\n                                    disableElevation\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    borderRadius= '12px'\n                                    onClick={handleLoginSubmit}\n                                >\n                                    Sign in\n                                </Button>\n\n                        </Box>\n                    </form>\n                    </Formik>\n          </>\n\n    )\n\n\n\n\n}\n\nexport default LoginForm\n","\n\n// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst LoginWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: '#f1f8e9',\n    minHeight: '100vh'\n}));\n\nexport default LoginWrapper1;","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\nimport LoginForm from './LoginForm';\nimport LoginWrapper1 from './AuthWrapper1';\n\nfunction LoginPage({onCreateOrLog, responseFromAccountOrLogged}) {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n       <LoginWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                                borderRadius: '12px',\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to sign in\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <LoginForm onCreateOrLog={onCreateOrLog} responseFromAccountOrLogged={responseFromAccountOrLogged}/>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/regsiter\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don&apos;t have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper1>\n\n    )\n\n}\n\nexport default LoginPage","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\nimport RegisterForm from './RegisterForm';\nimport LoginWrapper1 from './AuthWrapper1';\n\nfunction RegisterPage({ onCreateOrLog, responseFromAccountOrLogged }) {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n       <LoginWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign Up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RegisterForm onCreateOrLog={onCreateOrLog} responseFromAccountOrLogged={responseFromAccountOrLogged}/>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                               Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper1>\n\n    )\n\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, Link } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Rounds from \"../components/Rounds\";\nimport RoundsForMain from \"../components/RoundsForMain\";\nimport AddRound from \"../components/AddRound\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\nimport { Link as RouterLink } from 'react-router-dom';\n\n\n\nfunction MainPage ({loggedUser}) {\n  const [posts, setPosts] = useState([])\n  const [allPosts, setAllPosts] = useState([])\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (loggedUser) {\n      setPosts(loggedUser.rounds)\n    }\n  }, [loggedUser]);\n\n  useEffect(() => {\n    fetch(\"/api/rounds\")\n    .then(res => {\n      if(res.ok){\n          res.json().then(posts => {\n              setAllPosts(posts)\n          })\n      } else {\n          res.json().then(json => setErrors(Object.entries(json.errors)))\n      }\n  })\n  }, []);\n\n  function friendsPosts() {\n    let idsArray = []\n    const pluck = (arr, key) => arr.map(i => i[key]);\n    const friendIds = pluck(loggedUser.friends, 'id')\n    idsArray = [...friendIds, loggedUser.id]\n\n    const postsArray = []\n    for ( let i = 0; i < idsArray.length; i++ ) {\n      const eachPostsArray = allPosts.filter(post => post.user.id === idsArray[i])\n      postsArray.push(eachPostsArray)\n    }\n    return postsArray.flat()\n  }\n\nconsole.log(allPosts)\n  \n  \n  // callback functions for posts CRUD\n  const addPost = (newPost) => setAllPosts(AllPosts => [...AllPosts, newPost])\n\n  const deletePost = (id) => setAllPosts(current => current.filter(p => p.id !== id)) \n\n  const updatePost = (updatedPost) => setPosts(current => {\n    return current.map(post => {\n     if(post.id === updatedPost.id){\n       return updatedPost\n     } else {\n       return post\n     }\n    })\n  })\n\n  \n\n  \n\n    return (\n        <Box>\n        <Box borderBottom=\"1px solid #ccc\" padding=\"20px 20px\">\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Home</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        <Box height=\"92vh\" sx={{ overflowY: \"scroll\" }}>\n        <AddRound loggedUser={loggedUser} addPost={addPost}/>\n          <Box textAlign=\"center\" marginTop=\"1rem\">\n          {loggedUser.friends.length > 0 ? friendsPosts().sort((a, b) => b.id - a.id)\n          ?.map(post => (\n                    <RoundsForMain key={post.id} post={post} deletePost={deletePost} user={loggedUser} loggedUser={loggedUser} updatePost={updatePost}/>\n                ))\n                : \n          <Box container style={{ display: \"inline-block\" }}>\n            <Link component={RouterLink} to=\"/friends\">Add some friends to see when they are playing!</Link>\n          </Box>\n        \n              }\n          </Box>\n        </Box>\n      </Box>\n\n\n    )\n\n\n}\n\nexport default MainPage;","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport {\n  Hidden,\n  useTheme,\n} from \"@mui/material\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction LeftSidebar({loggedUser, onLogOut}) {\n    const theme = useTheme();\n\n    return (\n        <>\n      <Box sx={{ height: \"100vh\", maxWidth: \"100%\" }}>\n        <Box textAlign=\"center\" padding=\"15px\">\n          <Link\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <img src=\"https://cdn-icons-png.flaticon.com/512/1800/1800934.png\" alt=\"logo\" width=\"100px\" />\n          </Link>\n        </Box>\n        <List>\n          <NavLink\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <ListItem\n              button\n              sx={{\n                borderRadius: \"28px\",\n                margin: \".5rem 0\",\n              }}\n            >\n              <ListItemIcon>\n                <HomeIcon fontSize=\"medium\" color=\"action\" />\n              </ListItemIcon>\n              <Hidden lgDown>\n                <ListItemText\n                  primaryTypographyProps={{\n                    fontSize: \"18px\",\n                    color: theme.palette.action.active,\n                  }}\n                  primary=\"Home\"\n                />\n              </Hidden>\n            </ListItem>\n            </NavLink>\n            <NavLink\n            to={`/profile/${loggedUser.id}`}\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <ListItem\n              button\n              sx={{\n                borderRadius: \"28px\",\n                margin: \".5rem 0\",\n              }}\n            >\n              <ListItemIcon>\n                <PersonIcon fontSize=\"medium\" color=\"action\" />\n              </ListItemIcon>\n              <Hidden lgDown>\n                <ListItemText\n                  primaryTypographyProps={{\n                    fontSize: \"18px\",\n                    color: theme.palette.action.active,\n                  }}\n                  primary=\"Profile\"\n                />\n              </Hidden>\n            </ListItem>\n          </NavLink>\n          <NavLink  \n            to=\"/friends\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}>\n          <ListItem\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n          >\n            <ListItemIcon>\n              <FavoriteIcon fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Friends\"\n              />\n            </Hidden>\n          </ListItem>\n          </NavLink>\n          <NavLink  \n            to=\"/myaccount\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}>\n          <ListItem\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n          >\n            <ListItemIcon>\n              <ManageAccountsIcon fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Manage Account\"\n              />\n            </Hidden>\n          </ListItem>\n          </NavLink>\n          <ListItem\n            id=\"basic-button\"\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n            onClick={onLogOut}\n          >\n            <ListItemIcon>\n              <LogoutIcon fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Logout\"\n              />\n            </Hidden>\n          </ListItem>\n          </List>\n      </Box>\n        </>\n    )\n}\n\nexport default LeftSidebar;","import { Box, Grid, Hidden } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\nimport LeftSidebar from \"./LeftSidebar\";\nimport RightSidebar from \"./RightSidebar\";\n\nfunction Layout ({ children, loggedUser, onLogOut, user, golfBuddies}) {\n    const theme = useTheme();\n\n\n    return (\n        <Box\n      sx={{\n        maxWidth: theme.breakpoints.values.lg,\n        margin: \"0 auto\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={1} lg={2}>\n          <LeftSidebar loggedUser={loggedUser} onLogOut={onLogOut}/>\n        </Grid>\n        <Grid item xs={11} lg={10}>\n          <Grid container>\n            <Grid item xs={12} lg={8}>\n              <Box\n                sx={{\n                  height: \"100vh\",\n                  margin: \"0 1rem\",\n                  borderLeft: \"1px solid #ccc\",\n                  borderRight: \"1px solid #ccc\",\n                }}\n              >\n                  { children }\n              </Box>\n            </Grid>\n            <Hidden lgDown>\n              <Grid item lg={4} sx={{ height: \"100vh\" }}>\n                <RightSidebar user={user} loggedUser={loggedUser} golfBuddies={golfBuddies}/>\n              </Grid>\n            </Hidden>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n\n    )\n}\n\nexport default Layout;","import { useState, useEffect } from \"react\";\nimport { Grid, Box, Typography } from \"@mui/material\"\nimport { IconButton } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport FriendsList from \"../components/FriendsList\";\n\n\nimport { Link as RouteLink } from \"react-router-dom\";\n\nfunction GolfBuddies ( {loggedUser, golfBuddies, setGolfBuddies, addGolfBuddy, deleteGolfBuddy} ) {\n    \n    const [search, setSearch] = useState(\"\");\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n        fetch(\"/api//users\")\n        .then(res => res.json())\n        .then(setUsers)\n    }, [])\n\n   \n\n    return (\n        <Box>\n        <Box borderBottom=\"1px solid #ccc\" padding=\"20px 20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item sx={{ mr: \"10px\" }}>\n              <RouteLink to=\"/\">\n                <IconButton>\n                  <ArrowBackIcon />\n                </IconButton>\n              </RouteLink>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\">Friends</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        <Grid container style={{ display: \"inline-block\", width: \"80%\", margin: \"auto\", justifyContent: \"space-evenly\" }}>\n            {loggedUser.friends?.map(friend => (\n            <FriendsList \n            friend={friend}\n            loggedUser={loggedUser} \n            golfBuddies={golfBuddies} \n            setGolfBuddies={setGolfBuddies}\n            addGolfBuddy={addGolfBuddy}\n            deleteGolfBuddy={deleteGolfBuddy}\n            />\n            ))}\n        </Grid>\n        </Box>\n\n\n    )\n}\n\nexport default GolfBuddies;","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport './App.css';\nimport { useParams } from \"react-router-dom\";\n\nimport LoginPage from './auth/LoginPage'\nimport RegisterPage from \"./auth/RegisterPage\";\nimport MainPage from \"./pages/MainPage\";\nimport Layout from \"./components/Layout\";\nimport GolfBuddies from \"./pages/GolfBuddies\";\nimport Profile from \"./pages/Profile\";\nimport ForgotPasswordPage from './auth/ForgotPasswordPage'\nimport ResetPasswordPage from \"./auth/ResetPasswordPage\";\nimport RoundDetails from \"./pages/RoundDetails\";\nimport MyAccount from \"./pages/MyAccount\";\n\nfunction App() {\n  const [loggedUser, setLoggedUser] = useState(null);\n  const [responseFromAccountOrLogged, setResponseFromAccountOrLogged] = useState(false);\n  const [authorize, setAuthorize] = useState(false);\n  const [rounds, setRounds] =useState([])\n  const [user, setUser] =useState([])\n  const { id } = useParams();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"/api/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          setLoggedUser(user);\n          setAuthorize(true);\n        });\n      } else {\n        setAuthorize(true);\n      }\n    });\n  }, []);\n\n\n  useEffect(() => {\n    fetch(\"/api/rounds\").then((r) => {\n      if (r.ok) {\n        r.json().then((res) => {\n          setRounds(res);\n        });\n      } \n    });\n  }, []);\n\n\n\n\n  function handleLogOut(e) {\n    fetch(\"/api/logout\", {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        setLoggedUser(null);\n        setResponseFromAccountOrLogged(false);\n        history.push(\"/\");\n\n      }\n    });\n  }\n\n  function handleCreateOrLog(user) {\n    setResponseFromAccountOrLogged(true);\n\n    setTimeout(() => {\n      setLoggedUser(user);\n      history.push(\"/\");\n    }, 1500);\n  }\n\n  const [golfBuddies, setGolfBuddies] =useState([])\n  \n  useEffect(() => {\n    fetch(\"/api/golf_buddies\")\n      .then(res => res.json())\n      .then(setGolfBuddies)\n  }, [])\n\n  const addGolfBuddy = (newGolfBuddy) => setGolfBuddies(golfBuddies => [...golfBuddies, newGolfBuddy])\n\n  const deleteGolfBuddy = (id) => setGolfBuddies(current => current.filter(g => g.id !== id)) \n\n  if (!authorize) {\n    return <div></div>;\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      {loggedUser ? (\n        <Switch>\n           <Layout \n            loggedUser={loggedUser}\n            onLogOut={handleLogOut}\n            user={user}\n            golfBuddies={golfBuddies}\n            setGolfBuddies={setGolfBuddies}\n            addGolfBuddy={addGolfBuddy}\n            deleteGolfBuddy={deleteGolfBuddy}\n            >\n          <Route exact path=\"/\">\n           \n             <MainPage loggedUser={loggedUser}/>\n            \n          </Route>\n          <Route exact path=\"/friends\">\n          \n             <GolfBuddies \n             loggedUser={loggedUser}\n             golfBuddies={golfBuddies}\n             setGolfBuddies={setGolfBuddies}\n             addGolfBuddy={addGolfBuddy}\n             deleteGolfBuddy={deleteGolfBuddy}\n             />\n            \n          </Route>\n          <Route exact path=\"/myaccount\">\n           \n             <MyAccount \n             currentUser={loggedUser}\n             setCurrentUser={setLoggedUser}\n             />\n            \n          </Route>\n          <Route exact path=\"/profile/:id\">\n        \n             <Profile \n             loggedUser={loggedUser}\n             />\n           \n          </Route>\n          </Layout>\n          <Route exact path=\"*\">\n            <h2>404 Error Not Found</h2>\n          </Route>\n        </Switch>\n        ) : (\n          <Switch>\n            <Route exact path=\"/login\">\n              <LoginPage\n                onCreateOrLog={handleCreateOrLog}\n                responseFromAccountOrLogged={responseFromAccountOrLogged}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              <LoginPage\n                onCreateOrLog={handleCreateOrLog}\n                responseFromAccountOrLogged={responseFromAccountOrLogged}\n              />\n            </Route>\n            <Route exact path=\"/regsiter\">\n              <RegisterPage\n                onCreateOrLog={handleCreateOrLog}\n                responseFromAccountOrLogged={responseFromAccountOrLogged}\n              />\n            </Route>\n            <Route exact path=\"/forgot_password\">\n              <ForgotPasswordPage/>\n            </Route>\n            <Route exact path=\"/reset_password\">\n              <ResetPasswordPage\n              onCreateOrLog={handleCreateOrLog}\n              responseFromAccountOrLogged={responseFromAccountOrLogged}\n              />\n            </Route>\n            <Route exact path=\"*\">\n              <h2>404 Error Not Found</h2>\n            </Route>\n          </Switch>\n        )}\n</div>\n  );\n}\n\nexport default App;\n","import { Grid, IconButton, Typography, Menu, MenuItem, } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { useState } from \"react\";\nimport { updateComment, deleteComment } from \"../slices/commentsSlice\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport default function Comment1({ comment, loggedUser }) {\n    const dispatch = useDispatch()\n    const {created_at, user, id} = comment\n    const [anchorEl, setAnchorEl] = useState(null);\n    const openIcon = Boolean(anchorEl);\n    const [open, setOpen] = useState(false);\n  \n  \n  const handleClick = (event) => {\n  setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseIcon = () => {\n    setAnchorEl(null);\n  };\n\n    const handleDeleteComment = () => {\n    dispatch(deleteComment(id));\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box\n      padding=\"1rem\"\n      sx={{\n        \"&:hover\": {\n          backgroundColor: \"#eee\",\n        },\n      }}\n    >\n      <Grid container flexWrap=\"nowrap\">\n        <Grid item sx={{ paddingRight: \"1rem\" }}>\n          <img src={user.profile_pic} alt=\"lgoog\" width=\"50px\" />\n        </Grid>\n        <Grid item flexGrow=\"1\">\n          <Box>\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              flexWrap=\"nowrap\"\n            >\n              <Grid item>\n                <Box display=\"flex\">\n                  <Typography\n                    sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}\n                  >\n                    {user.first_name} {user.last_name}\n                  </Typography>\n                  <Typography\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                  >\n                    @{user.username}\n                  </Typography>\n                  <Typography\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                  >\n                    .\n                  </Typography>\n                  <Typography\n                    sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                  >\n                    {created_at}\n                  </Typography>\n                </Box>\n                <Box>\n                  <Typography sx={{ fontSize: \"15px\", color: \"#555\" }}>\n                    {comment.comment}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid item>\n              {user.id === loggedUser.id && (\n                <IconButton\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleClick(e);\n                }}\n                >\n                  <MoreHorizIcon />\n                </IconButton>\n              )}\n                <Menu\n                        id=\"basic-menu\"\n                        anchorEl={anchorEl}\n                        open={openIcon}\n                        onClose={handleCloseIcon}\n                        onClick={(e) => e.stopPropagation()}\n                        MenuListProps={{\n                          \"aria-labelledby\": \"basic-button\",\n                        }}\n                      >\n                        {/* <MenuItem>\n                          Edit Comment\n                        </MenuItem> */}\n                        <MenuItem onClick={handleDeleteComment} >\n                          Delete Comment\n                        </MenuItem>\n                      </Menu>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {useTheme } from \"@mui/system\";\nimport { Box} from \"@mui/material\";\n\nimport Comment1 from \"./Comment1\";\n\n\nexport default function Modal1({\n  children,\n  open,\n  handleClose,\n  handleSave,\n  saveText,\n  len,\n  comments,\n  loggedUser\n}) {\n  const theme = useTheme();\n  const handleClick = () => {\n    handleSave();\n    handleClose();\n  };\n\n  return (\n      <Box>\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>\n        <Box textAlign=\"right\" borderBottom=\"1px solid #ccc\">\n          <IconButton onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          disabled={len === 0}\n          variant=\"contained\"\n          color=\"success\"\n          size=\"small\"\n          sx={{\n            borderRadius: theme.shape.borderRadius,\n            fontSize: \"12px\",\n          }}\n          onClick={handleClick}\n        >\n          {saveText}\n        </Button>\n      </DialogActions>\n      {comments?.map((comment) =>( \n                    <Comment1 key={comment.id} comment={comment} loggedUser={loggedUser}/>\n                ))}\n    </Dialog>\n     </Box>\n  );\n}","import { Grid, IconButton, Typography, Menu, MenuItem, Input, Box } from \"@mui/material\";\nimport { useState } from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectComments, addComment, updateComment, deleteComment } from \"../slices/commentsSlice\";\nimport moment from 'moment'\n\nimport Modal1 from \"./Modal1\";\n\n\nexport default function RoundsForMain1({ post, loggedUser, onDeletePost }) {\n  const dispatch = useDispatch();\n  const allcomments = useSelector(selectComments)\n  const [commentText, setCommentText] = useState(\"\");\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n   const openMenu = Boolean(menuAnchorEl);\n\n  // Extract the fields from the post object for easier access.\n  const { description, date, course, created_at } = post;\n  const { first_name, last_name, username, profile_pic } = post.user;\n\n  const formattedCreatedAt = moment(created_at).format(\"MM/DD/YYYY LT\");\n  const formattedDate = moment(date).format(\"MMMM DD, YYYY [at] LT\");\n\n  const roundComments = allcomments.data.filter((comment) => comment.round.id === post.id);\n\n  // Handler for opening the menu.\n  const handleMenuOpen = (e) => {\n    e.preventDefault();\n    setMenuAnchorEl(e.currentTarget);\n  };\n\n  // Handler for closing the menu.\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  // Handler for opening the comment modal.\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  // Handler for closing the comment modal.\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  // Handler for deleting the post.\n  const handleDeletePost = (e) => {\n    e.preventDefault()\n    onDeletePost(post.id);\n  };\n\n\n  // Handler for submitting a comment.\n \n  const handleSubmitComment = () => {\n    const newComment = { comment: commentText, user_id: loggedUser.id, round_id: post.id };\n    dispatch(addComment(newComment)).then(() => {\n      setCommentText(\"\");\n    });\n  };\n\n\n  return (\n    <>\n      \n        <Box\n          padding=\"1rem\"\n          sx={{\n            \"&:hover\": {\n              backgroundColor: \"#eee\",\n            },\n          }}\n        >\n          <Grid container flexWrap=\"nowrap\">\n            <Grid item sx={{ paddingRight: \"1rem\" }}>\n              <Link to=\"/\">\n                <img src={profile_pic} alt=\"logo\" width=\"50px\" />\n              </Link>\n            </Grid>\n            <Grid item flexGrow=\"1\">\n              <Box>\n                <Grid\n                  container\n                  justifyContent=\"space-between\"\n                  alignItems=\"center\"\n                  flexWrap=\"nowrap\"\n                >\n                  <Grid item>\n                    <Box display=\"flex\">\n                      <Typography sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}>\n                        {first_name} {last_name}\n                      </Typography>\n                      <Typography sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}>\n                        @{username}\n                      </Typography>\n                        <Typography\n                          sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                        >\n                          {formattedCreatedAt}\n                        </Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item>\n                    {post.user.id === loggedUser.id && (\n                        <IconButton\n                        // aria-expanded={open ? \"true\" : undefined}\n                        onClick={handleMenuOpen}\n                          \n                        >\n                          <MoreHorizIcon />\n                        </IconButton>\n                      )}\n                      <Menu\n                        id=\"basic-menu\"\n                        anchorEl={menuAnchorEl}\n                        open={openMenu}\n                        onClose={handleMenuClose}\n                        onClick={(e) => e.stopPropagation()}\n                        MenuListProps={{\n                          \"aria-labelledby\": \"basic-button\",\n                        }}\n                      >\n                        <MenuItem onClick={handleDeletePost}>\n                          Delete Post\n                        </MenuItem>\n                      </Menu>\n                    </Grid>\n                  </Grid>\n                  <Box display=\"flex\" padding=\"1rem 0\">\n                    <Typography sx={{ fontSize: \"20px\" }}>\n                      Looking for {description} golfers to play at {course}\n                    </Typography>\n                  </Box>\n                    <Box display=\"flex\" padding=\"1rem 0\" borderBottom=\"1px solid #ccc\">\n                    <Typography sx={{ fontSize: \"20px\", }}>\n                      Tee Time on {formattedDate}\n                    </Typography>\n                  </Box>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    marginRight=\"5rem\"\n                    marginTop=\".8rem\"\n                  >\n                    <IconButton\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleModalOpen();\n                    }}\n                      size=\"small\"\n                    >\n                      <ChatBubbleOutlineIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n     \n        {modalOpen && (\n        <Modal1\n          open={modalOpen}\n          handleClose={handleModalClose}\n          saveText={\"Comment\"}\n          len={commentText.trimStart().length}\n          comments={roundComments}\n          handleSave={handleSubmitComment}\n          loggedUser={loggedUser}\n        >\n          <Box>\n            <Grid container>\n              <Grid item>\n                <img src={loggedUser.profile_pic} alt=\"logo\" width=\"60px\" />\n              </Grid>\n              <Grid item flexGrow=\"1\">\n                <Box padding=\".5rem 0\" marginLeft=\"1rem\">\n                  <Input\n                    onChange={(e) => setCommentText(e.target.value)}\n                    value={commentText}\n                    multiline\n                    rows=\"2\"\n                    \n                    type=\"text\"\n                    placeholder=\"Post your comment\"\n                    sx={{ width: \"100%\" }}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Modal1>\n        )}\n      </>\n    );\n  }\n \n  ","import { useState } from \"react\";\nimport { Button, Grid, TextField, InputLabel, Box, useTheme } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { addPost } from \"../slices/roundsSlice\";\n\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\n\nimport { MenuItem, Select } from \"@mui/material\";\n\nconst defaultValues = {\n  user_id: undefined,\n  course: \"\",\n  date: Date(),\n  description: \"\",\n};\n\nexport default function AddRound1({ loggedUser, setPosts }) {\n  const theme = useTheme();\n  const [postValues, setPostValues] = useState(defaultValues);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPostValues({\n      ...postValues,\n      [name]: value,\n    });\n  };\n\n  const handleDateChange = (date) => {\n    setPostValues({\n      ...postValues,\n      date\n    })\n  }\n\n  const handleNumGolfersChange = (e) => {\n    setPostValues({\n      ...postValues,\n      description: e.target.value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newPost = {\n      ...postValues,\n      user_id: loggedUser.id,\n      date: postValues.date.toISOString(),\n      description: postValues.description.toString()\n    };\n    dispatch(addPost(newPost));\n    setPostValues(defaultValues);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Box padding=\"1rem 1rem 0 1rem\" borderBottom=\"1px solid #ccc\">\n          <Grid container>\n            <Grid item sx={{ paddingRight: \"1rem\" }}>\n              <img\n                src={loggedUser.profile_pic}\n                alt=\"lgogo\"\n                width=\"50px\"\n              />\n            </Grid>\n            <Grid item flexGrow=\"1\">\n            <Grid container>\n              <Grid item xs={12} md={6} sx={{ paddingRight: { md: \"1rem\" } }}>\n                <Box padding=\".5rem 0\">\n                <InputLabel>When are you playing?</InputLabel>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DateTimePicker\n                      renderInput={(props) => (\n                        <TextField\n                          {...props}\n                          multiline\n                          rows=\"1\"\n                      \n                          type=\"text\"\n                          sx={{ width: \"100%\" }}\n                        />\n                      )}\n                      value={postValues.date}\n                      onChange={handleDateChange}\n                      disablePast\n                      required\n                    />\n                  </LocalizationProvider>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={6} sx={{ paddingLeft: { md: \"1rem\" } }}>\n                <Box padding=\".5rem 0\" >\n                <InputLabel>How Many Golfers Do You Need?</InputLabel>\n                  <Select\n                    labelId=\"description\"\n                    id=\"description\"\n                    value={postValues.description}\n                    onChange={handleNumGolfersChange}\n                    sx={{ width: \"100%\" }}\n                    name=\"description\"\n                  >\n                    <MenuItem value={1}>1 golfer</MenuItem>\n                    <MenuItem value={2}>2 golfers</MenuItem>\n                    <MenuItem value={3}>3 golfers</MenuItem>\n                  </Select>\n                </Box>\n              </Grid>\n            </Grid>\n              <Box padding=\".8rem 0\">\n                <TextField\n                  multiline\n                  rows=\"1\"\n                 \n                  type=\"text\"\n                  placeholder=\"What Golf Course?\"\n                  sx={{ width: \"100%\" }}\n                  name=\"course\"\n                  value={postValues.course}\n                  onChange={handleChange}\n                  required\n                />\n              </Box>\n              <Box\n                textAlign=\"right\"\n                paddingBottom=\".5rem\"\n                paddingTop=\".5rem\"\n                \n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  sx={{\n                    borderRadius: theme.shape.borderRadius,\n                    fontSize: \"14px\",\n                  }}\n                  type=\"submit\"\n                >\n                  Post\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </form>\n    </>\n  );\n}\n","import { Grid, Typography, Link } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from \"react\";\n\n// Import Redux actions and selectors\nimport { selectRounds, deletePost, updatePost } from '../slices/roundsSlice';\nimport { selectLoggedUser, fetchUser } from \"../slices/userSlice\";\n\n// Import custom components\nimport RoundsForMain1 from \"../redux_components/RoundsForMain1\";\nimport AddRound1 from \"../redux_components/AddRound1\";\n\nexport default function MainPage1() {\n  // Initialize Redux dispatch and selector hooks\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(selectLoggedUser);\n  const rounds = useSelector(selectRounds);\n\n  // Initialize state for posts\n  const [posts, setPosts] = useState(friendsPosts().sort((a, b) => b.id - a.id));\n\n\n  useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (rounds.data.length > 0) {\n      setPosts(friendsPosts().sort((a, b) => b.id - a.id));\n    }\n  }, [rounds]);\n\n\n  // Function to delete a post from the Redux store\n  function handleDeletePost(postId) {\n    dispatch(deletePost(postId));\n    setPosts(posts.filter(post => post.id !== postId));\n  }\n\n  // // Function to update a post in the Redux store\n  // function handleUpdatePost(updatedPost) {\n  //   dispatch(updatePost(updatedPost));\n  // }\n\n// Function to retrieve all posts by the user's friends and the user\nfunction friendsPosts() {\n  let idsArray = [];\n  const pluck = (arr, key) => arr.map(i => i[key]);\n  const friendIds = pluck(loggedUser.friends, 'id')\n  idsArray = [...friendIds, loggedUser.id]\n\n  const postsArray = []\n  for ( let i = 0; i < idsArray.length; i++ ) {\n    const eachPostsArray = rounds.data.filter(round => round.user.id === idsArray[i])\n    postsArray.push(eachPostsArray)\n  }\n  return postsArray.flat()\n}\n\n  return (\n    // Main container for the page\n    <Box sx={{ height: \"100%\" }}>\n      <Box height=\"90vh\" sx={{ overflowY: \"scroll\" }}>\n        {/* Header section */}\n        <Box borderBottom=\"1px solid #ccc\" padding=\"20px\">\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Home</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        {/* Main content section */}\n        <Box padding=\"1rem\" marginX=\"auto\" maxWidth=\"900px\">\n          {/* Add post form */}\n          <AddRound1 loggedUser={loggedUser} setPosts={setPosts}/>\n          {/* Conditional rendering for posts */}\n          <Box textAlign=\"center\" marginTop=\"1rem\">\n          {loggedUser.friends.length > 0 ? posts\n              .map(post => (\n                <RoundsForMain1\n                  key={post.id}\n                  post={post}\n                  loggedUser={loggedUser}\n                  onDeletePost={handleDeletePost}\n                />\n              ))\n              : \n              <Box container style={{ display: \"inline-block\" }}>\n                <Link component={RouterLink} to=\"/friends\">Add some friends to see when they are playing!</Link>\n              </Box>\n            }\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\n\n\n\n\n","import { Typography, useTheme } from \"@mui/material\";\nimport { Button, Grid, Box } from \"@mui/material\";\nimport  { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoggedUser } from \"../slices/userSlice\";\nimport { selectGolfBuddies, deleteGolfBuddy } from \"../slices/golfBuddiesSlice\";\n\n\nfunction FriendsList1 ( {friend}) {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const loggedUser = useSelector(selectLoggedUser);\n    const golfBuddies = useSelector(selectGolfBuddies);\n    const [disabled, setDisabled] = useState(false)\n\n    const handleDeleteFriend = () => {\n        const golfBuddyToDelete = golfBuddies.data?.find(golfBuddy => {\n          if ((golfBuddy.user_id === loggedUser.id) && (golfBuddy.friend_id === friend.id)) {\n            return golfBuddy.id\n          } else\n            return undefined\n        })\n        dispatch(deleteGolfBuddy(golfBuddyToDelete.id))\n        setDisabled(currentState => !currentState)\n      }\n\n\n\n    return (\n            <Box margin=\"1rem 0\">\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                    <Grid item>\n                    <Grid container>\n                        <Link to={`/profile/${friend.id}`}>\n                        <Grid item sx={{ paddingRight: \"12px\" }}>\n                            <img src={friend.profile_pic} width=\"50px\" alt=\"avatar\" />\n                        </Grid>\n                        </Link>\n                        <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                            <Typography sx={{ fontSize: \"16px\", fontWeight: \"500\" }}>\n                                {friend.first_name} {friend.last_name}\n                            </Typography>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Typography\n                                sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}\n                                >\n                                    {friend.username}\n                                </Typography>\n                            </Box>\n                            </Grid>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid item>\n                    <Button\n                        \n                        size=\"small\"\n                        sx={{\n                        borderRadius: theme.shape.borderRadius,\n                        textTransform: \"capitalize\",\n                        ml: \"12px\",\n                        background: \"success\",\n                        \"&:hover\": {\n                            background: \"#333\",\n                        },\n                        }}\n                        variant=\"contained\"\n                        color=\"error\"\n                        disabled={disabled}\n                        onClick={handleDeleteFriend}>\n                            {disabled ? \"Friend Removed\" : \"Unfriend\"}\n                    </Button>\n                    </Grid>\n                </Grid>\n            \n    </Box>\n  );\n}\n\n\n\nexport default FriendsList1;","\nimport { Grid, Box, Typography } from \"@mui/material\"\nimport { IconButton } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport FriendsList1 from \"../redux_components/FriendsList1\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectLoggedUser, fetchUser} from \"../slices/userSlice\";\n\n\n\n\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nfunction GolfBuddies1 () {\n    const dispatch = useDispatch()\n    const loggedUser = useSelector(selectLoggedUser);\n\n    useEffect(() => {\n      dispatch(fetchUser());\n    }, [dispatch]);\n     \n\n    return (\n        <Box>\n        <Box borderBottom=\"1px solid #ccc\" padding=\"20px 20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item sx={{ mr: \"10px\" }}>\n              <RouteLink to=\"/\">\n                <IconButton>\n                  <ArrowBackIcon />\n                </IconButton>\n              </RouteLink>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\">Friends</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        <Box height=\"90vh\" sx={{ overflowY: \"scroll\" }}>\n        <Grid container style={{ display: \"inline-block\", width: \"80%\", margin: \"auto\", justifyContent: \"space-evenly\" }}>\n            {loggedUser.friends?.map(friend => (\n            <FriendsList1 \n            key={friend.id}\n            friend={friend}\n            />\n            ))}\n        </Grid>\n        </Box>\n        </Box>\n\n\n    )\n}\n\nexport default GolfBuddies1;","import { Grid, IconButton, Typography, Menu, MenuItem, Input, Box } from \"@mui/material\";\nimport { useState } from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectRounds, deletePost } from \"../slices/roundsSlice\";\nimport { addComment, selectComments } from \"../slices/commentsSlice\";\nimport moment from 'moment'\n\nimport Modal1 from \"./Modal1\";\n\n\nexport default function RoundsForMain1({ user, post, loggedUser }) {\n  const dispatch = useDispatch();\n  const rounds = useSelector(selectRounds);\n  const comments = useSelector(selectComments);\n  const [commentText, setCommentText] = useState(\"\");\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openMenu = Boolean(menuAnchorEl);\n\n  // Extract the fields from the post object for easier access.\n  const { description, date, course, created_at } = post;\n  const { first_name, last_name, username, profile_pic, id: userId } = user;\n\n  const roundComments = comments.data.filter((comment) => comment.round.id === post.id);\n\n\n  // Handler for opening the menu.\n  const handleMenuOpen = (e) => {\n    e.preventDefault();\n    setMenuAnchorEl(e.currentTarget);\n  };\n\n  // Handler for closing the menu.\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  // Handler for opening the comment modal.\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  // Handler for closing the comment modal.\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  // Handler for deleting the post.\n  const handleDeletePost = () => {\n    dispatch(deletePost(post.id));\n  };\n\n  // Handler for submitting a comment.\n  const handleSubmitComment = () => {\n    const newComment = { comment: commentText, user_id: loggedUser.id, round_id: post.id };\n    dispatch(addComment(newComment)).then(() => {\n      setCommentText(\"\");\n    });\n  };\n\n  const formattedCreatedAt = moment(created_at).format(\"MM/DD/YYYY LT\");\n  const formattedDate = moment(date).format(\"MMMM DD, YYYY [at] LT\");\n\n  // // Find the round object that matches the current post and get its comments array.\n  // const round = rounds.data.find((round) => round.id === post.id);\n  // const { comments: roundComments = [] } = round || {};\n    \n    return (\n      <>\n       \n          <Box\n            padding=\"1rem\"\n            sx={{\n              \"&:hover\": {\n                backgroundColor: \"#eee\",\n              },\n            }}\n          >\n            <Grid container flexWrap=\"nowrap\">\n              <Grid item sx={{ paddingRight: \"1rem\" }}>\n                <Link to='/'>\n                  <img src={profile_pic} alt=\"lgoog\" width=\"50px\" />\n                </Link>\n              </Grid>\n              <Grid item flexGrow=\"1\">\n                <Box>\n                  <Grid\n                    container\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    flexWrap=\"nowrap\"\n                  >\n                    <Grid item>\n                      <Box display=\"flex\">\n                        <Typography\n                          sx={{ fontSize: \"16px\", fontWeight: 500, mr: \"6px\" }}\n                        >\n                          {first_name} {last_name}\n                        </Typography>\n                        <Typography\n                          sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                        >\n                          @{username}\n                        </Typography>\n                        <Typography\n                          sx={{ fontSize: \"15px\", mr: \"6px\", color: \"#555\" }}\n                        >\n                          {formattedCreatedAt}\n                        </Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item>\n                    {post.user_id === loggedUser.id && (\n                        <IconButton\n                        // aria-expanded={open ? \"true\" : undefined}\n                        onClick={handleMenuOpen}\n                          \n                        >\n                          <MoreHorizIcon />\n                        </IconButton>\n                      )}\n                      <Menu\n                        id=\"basic-menu\"\n                        anchorEl={menuAnchorEl}\n                        open={openMenu}\n                        onClose={handleMenuClose}\n                        onClick={(e) => e.stopPropagation()}\n                        MenuListProps={{\n                          \"aria-labelledby\": \"basic-button\",\n                        }}\n                      >\n                        <MenuItem onClick={(e) => handleDeletePost(e)}>\n                          Delete Post\n                        </MenuItem>\n                      </Menu>\n                    </Grid>\n                  </Grid>\n                  <Box display=\"flex\" padding=\"1rem 0\">\n                    <Typography sx={{ fontSize: \"20px\" }}>\n                    Looking for {description} golfers to play at {course}\n                    </Typography>\n                  </Box>\n                    <Box display=\"flex\" padding=\"1rem 0\" borderBottom=\"1px solid #ccc\">\n                    <Typography sx={{ fontSize: \"20px\"}}>\n                      Tee Time on {formattedDate}\n                    </Typography>\n                  </Box>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    marginRight=\"5rem\"\n                    marginTop=\".8rem\"\n                  >\n                    <IconButton\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleModalOpen();\n                    }}\n                      size=\"small\"\n                    >\n                      <ChatBubbleOutlineIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        \n        {modalOpen && (\n        <Modal1\n          open={modalOpen}\n          handleClose={handleModalClose}\n          saveText={\"Comment\"}\n          len={commentText.trimStart().length}\n          comments={roundComments}\n          handleSave={handleSubmitComment}\n          loggedUser={loggedUser}\n        >\n          <Box>\n            <Grid container>\n              <Grid item>\n                <img src={loggedUser.profile_pic} alt=\"logo\" width=\"60px\" />\n              </Grid>\n              <Grid item flexGrow=\"1\">\n                <Box padding=\".5rem 0\" marginLeft=\"1rem\">\n                  <Input\n                    onChange={(e) => setCommentText(e.target.value)}\n                    value={commentText}\n                    multiline\n                    rows=\"2\"\n                   \n                    type=\"text\"\n                    placeholder=\"Post your comment\"\n                    sx={{ width: \"100%\" }}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Modal1>\n        )}\n      </>\n    );\n  }\n \n  ","\nimport { Box, Grid, IconButton,Typography, useTheme } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport { useEffect, useState } from \"react\";\nimport Rounds1 from \"../redux_components/Rounds1\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport { selectFetchUserById, fetchUserById, selectLoggedUser } from '../slices/userSlice'\n\nfunction Profile1() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { id }  = useParams();\n  const user = useSelector(selectFetchUserById);\n  const loggedUser = useSelector(selectLoggedUser)\n\n  \n\n  useEffect(() => {\n    dispatch(fetchUserById(id)); // Update dummy state to force re-render\n  }, [dispatch, id]);\n \n    if (!user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n\n        <Box>\n        <Box borderBottom=\"1px solid #ccc\" padding=\"8px 20px\">\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n            <Grid item sx={{ mr: \"10px\" }}>\n              <RouteLink to=\"/\">\n                <IconButton>\n                  <ArrowBackIcon />\n                </IconButton>\n              </RouteLink>\n            </Grid>\n  \n           \n              <Grid item>\n                <Typography variant=\"h6\">\n                  {user.data.first_name} {user.data.last_name}\n                </Typography>\n              </Grid>\n          \n          </Grid>\n        </Box>\n      \n          <Box height=\"90vh\" sx={{ overflowY: \"scroll\" }}>\n            <Box position=\"relative\">\n              <img\n                width=\"100%\"\n                height='100%'\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyrC3DKrS0GZ-_FJrsXoiIW5u4EMK-O_mZQQ&usqp=CAU'\n                alt=\"background\"\n              />\n              <Box\n                sx={{\n                  position: \"absolute\",\n                  top: 200,\n                  left: 30,\n                  background: \"#eee\",\n                  borderRadius: \"50%\",\n                \n                }}\n              >\n                <img width='150px' src={user.data.profile_pic} alt=\"profile\" />\n              </Box>\n            </Box>\n            <Box textAlign=\"right\" padding=\"10px 20px\">\n            {user.data.id === loggedUser.id && (\n              <IconButton>\n                <MoreHorizIcon />\n              </IconButton>\n              )}\n            </Box>\n            <Box padding=\"10px 20px\">\n              <Typography variant=\"h6\" sx={{ fontWeight: \"500\" }}>\n              {user.data.first_name} {user.data.last_name}\n              </Typography>\n              <Typography sx={{ fontSize: \"14px\", color: \"#555\" }}>\n                @{user.data.username}\n              </Typography>\n              <Typography fontSize=\"16px\" color=\"#333\" padding=\"10px 0\">\n                {user.data.handicap} HDCP\n              </Typography>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                padding=\"6px 0\"\n                flexWrap=\"wrap\"\n              >\n                <Box display=\"flex\">\n                  <LocationOnIcon htmlColor=\"#555\" />\n                  <Typography sx={{ ml: \"6px\", color: \"#555\" }}>\n                    {user.data.city}, {user.data.state}\n                  </Typography>\n                </Box>\n              </Box>\n              \n            </Box>\n            <Box borderBottom=\"1px solid #ccc\">\n              <Typography\n                display=\"inline-block\"\n                variant=\"caption\"\n                fontSize=\"16px\"\n                marginX=\"1rem\"\n                padding=\"6px 0\"\n                fontWeight=\"500\"\n                borderBottom={`4px solid ${theme.palette.primary.main}`}\n              >\n                Upcoming Rounds\n              </Typography>\n            </Box>\n            {user.data.rounds?.map((post) =>( \n            <Rounds1 key={post.id} post={post}  user={user.data} loggedUser={loggedUser} />\n            ))}\n              \n          </Box>\n\n      </Box>\n        \n    )\n }\n\n export default Profile1","import React, { useState } from 'react'\nimport { Box, Grid, TextField, Button, InputAdornment, Typography} from \"@mui/material\"\nimport { IconButton } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { Link as RouteLink } from \"react-router-dom\";\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\nimport HomeIcon from '@mui/icons-material/Home';\nimport GolfCourseIcon from '@mui/icons-material/GolfCourse';\n\nimport { updateUser, selectLoggedUser } from '../slices/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function MyAccount1() {\n\n    const dispatch = useDispatch()\n    const currentUser = useSelector(selectLoggedUser)\n    \n    // Set the initial form values to the current user data\n    const [updateUserForm, setUpdateUserForm] = useState({\n      first_name: currentUser.first_name,\n      last_name: currentUser.last_name,\n      profile_pic: currentUser.profile_pic,\n      username: currentUser.username,\n      email: currentUser.email,\n      city: currentUser.city,\n      state: currentUser.state,\n      handicap: currentUser.handicap,\n    });\n\n    // Handle changes to the form fields\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setUpdateUserForm({\n        ...updateUserForm,\n        [name]: value,\n      });\n    };\n\n    // Handle form submission\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      dispatch(updateUser(updateUserForm))\n        .catch((error) => {\n        });\n    };\n    \n    return (\n        <Box>\n        <Box borderBottom=\"1px solid #ccc\" padding=\"20px 20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item sx={{ mr: \"10px\" }}>\n              <RouteLink to=\"/\">\n                <IconButton>\n                  <ArrowBackIcon />\n                </IconButton>\n              </RouteLink>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\">Edit My Account</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n        <Grid container style={{ display: \"inline-block\", width: \"80%\", margin: \"auto\", justifyContent: \"space-evenly\" }}>\n            \n                <form onSubmit={handleSubmit}>\n                    <Grid container \n                    alignItems=\"center\"\n                    justify=\"center\"\n                    direction=\"row\"\n                    margin=\"auto\">\n                    <Grid item margin=\"auto\" marginTop=\"5%\" marginBottom=\"2%\">\n                    <TextField\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <ContactPageIcon/>\n                                </InputAdornment>\n                            ),\n                            }}\n                            id=\"first_name\"\n                            name=\"first_name\"\n                            label=\"First Name\"\n                            type=\"text\"\n                            value={updateUserForm.first_name}\n                            onChange={handleChange}\n                            \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" marginTop=\"5%\" marginBottom=\"2%\">\n                    <TextField\n                            InputLabelProps={{ shrink: true }}\n                            InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                <ContactPageIcon/>\n                                </InputAdornment>\n                            ),\n                            }}\n                            id=\"last_name\"\n                            name=\"last_name\"\n                            label=\"Last Name\"\n                            type=\"text\"\n                            value={updateUserForm.last_name}\n                            onChange={handleChange}\n                            \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <ContactPageIcon/>\n                            </InputAdornment>\n                            ),\n                        }}\n                        id=\"username\"\n                        name=\"username\"\n                        label=\"Username\"\n                        type=\"text\"\n                        value={updateUserForm.username}\n                        onChange={handleChange}\n                        \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <ContactPageIcon/>\n                            </InputAdornment>\n                            ),\n                        }}\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"Email\"\n                        type=\"text\"\n                        value={updateUserForm.email}\n                        onChange={handleChange}\n                        \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" marginBottom=\"2%\">\n                    <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                            <InsertPhotoIcon />\n                            \n                            </InputAdornment>\n                        ),\n                        }}\n                        id=\"profile_pic\"\n                        name=\"profile_pic\"\n                        label=\"Profile Picture\"\n                        type=\"text\"\n                        value={updateUserForm.profile_pic}\n                        onChange={handleChange}\n                        \n                    />\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <GolfCourseIcon/>\n                            </InputAdornment>\n                            ),\n                        }}\n                        id=\"handicap\"\n                        name=\"handicap\"\n                        label=\"Handicap\"\n                        type=\"text\"\n                        value={updateUserForm.handicap}\n                        onChange={handleChange}\n                        \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <HomeIcon/>\n                            </InputAdornment>\n                            ),\n                        }}\n                        id=\"city\"\n                        name=\"city\"\n                        label=\"City\"\n                        type=\"text\"\n                        value={updateUserForm.city}\n                        onChange={handleChange}\n                        \n                        />\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <HomeIcon/>\n                            </InputAdornment>\n                            ),\n                        }}\n                        id=\"state\"\n                        name=\"state\"\n                        label=\"State\"\n                        type=\"text\"\n                        value={updateUserForm.state}\n                        onChange={handleChange}\n                        \n                        />\n                    </Grid>\n                    </Grid>\n                    <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>\n                    <Button type=\"submit\" variant=\"contained\"  color='success'\n                        onSubmit={handleSubmit}>\n                        Submit Changes\n                    </Button>\n                    </Grid>\n                </form>\n          \n            </Grid>\n        </Box>\n  )\n}\n","import React from \"react\";\nimport { Grid, Box, List, ListItem, ListItemIcon, ListItemText, useMediaQuery } from \"@mui/material\";\nimport {Home, Person, ManageAccounts, Logout, Favorite } from \"@mui/icons-material\";\nimport { Hidden, useTheme } from \"@mui/material\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport {useHistory} from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectLoggedUser, logOut } from '../slices/userSlice';\n\nfunction LeftSidebar1() {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const loggedUser = useSelector(selectLoggedUser);\n    const history = useHistory();\n    const isSmallerScreen = useMediaQuery(theme.breakpoints.down(\"lg\"));\n\n    async function handleLogOut(e) {\n      e.preventDefault();\n      try {\n        const resultAction = await dispatch(logOut());\n        if (logOut.fulfilled.match(resultAction)) {\n          history.push(\"/login\");\n      \n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    \n    return (\n        <>\n          {isSmallerScreen ? (\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            position: \"fixed\",\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"#fff\",\n            boxShadow: \"0 -2px 10px rgba(0, 0, 0, 0.1)\",\n            zIndex: 10,\n          }}\n        >\n          <Link\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <Home fontSize=\"medium\" color=\"action\" />\n          </Link>\n          <NavLink\n            to={`/profile/${loggedUser.id}`}\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <Person fontSize=\"medium\" color=\"action\" />\n          </NavLink>\n          <NavLink\n            to=\"/friends\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <Favorite fontSize=\"medium\" color=\"action\" />\n          </NavLink>\n          <NavLink\n            to=\"/myaccount\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <ManageAccounts fontSize=\"medium\" color=\"action\" />\n          </NavLink>\n          <Box\n            component=\"button\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              color: \"#666\",\n              \"&:hover\": {\n                color: theme.palette.primary.main,\n              },\n            }}\n            onClick={handleLogOut}\n          >\n            <Logout fontSize=\"medium\" color=\"action\" />\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"10px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Logout\"\n              />\n            </Hidden>\n          </Box>\n        </Box>\n      ) : (\n      <Box sx={{ height: \"100vh\", maxWidth: \"100%\" }}>\n        <Box textAlign=\"center\" padding=\"15px\">\n          <Link\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <img src=\"https://cdn-icons-png.flaticon.com/512/1800/1800934.png\" alt=\"logo\" width=\"100px\" />\n          </Link>\n        </Box>\n        <Grid container direction=\"column\" justifyContent=\"space-between\" height=\"100%\">\n        <Grid item>\n        <List>\n          <NavLink\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <ListItem\n              button\n              sx={{\n                borderRadius: \"28px\",\n                margin: \".5rem 0\",\n              }}\n            >\n              <ListItemIcon>\n                <Home fontSize=\"medium\" color=\"action\" />\n              </ListItemIcon>\n              <Hidden lgDown>\n                <ListItemText\n                  primaryTypographyProps={{\n                    fontSize: \"18px\",\n                    color: theme.palette.action.active,\n                  }}\n                  primary=\"Home\"\n                />\n              </Hidden>\n            </ListItem>\n            </NavLink>\n            <NavLink\n            to={`/profile/${loggedUser.id}`}\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n          >\n            <ListItem\n              button\n              sx={{\n                borderRadius: \"28px\",\n                margin: \".5rem 0\",\n              }}\n            >\n              <ListItemIcon>\n                <Person fontSize=\"medium\" color=\"action\" />\n              </ListItemIcon>\n              <Hidden lgDown>\n                <ListItemText\n                  primaryTypographyProps={{\n                    fontSize: \"18px\",\n                    color: theme.palette.action.active,\n                  }}\n                  primary=\"Profile\"\n                />\n              </Hidden>\n            </ListItem>\n          </NavLink>\n          <NavLink  \n            to=\"/friends\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}>\n          <ListItem\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n          >\n            <ListItemIcon>\n              <Favorite fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Friends\"\n              />\n            </Hidden>\n          </ListItem>\n          </NavLink>\n          <NavLink  \n            to=\"/myaccount\"\n            style={{\n              textDecoration: \"none\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}>\n          <ListItem\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n          >\n            <ListItemIcon>\n              <ManageAccounts fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Manage Account\"\n              />\n            </Hidden>\n          </ListItem>\n          </NavLink>\n          <ListItem\n            id=\"basic-button\"\n            button\n            sx={{\n              borderRadius: \"28px\",\n              margin: \".5rem 0\",\n            }}\n            onClick={handleLogOut}\n          >\n            <ListItemIcon>\n              <Logout fontSize=\"medium\" color=\"action\" />\n            </ListItemIcon>\n            <Hidden lgDown>\n              <ListItemText\n                primaryTypographyProps={{\n                  fontSize: \"18px\",\n                  color: theme.palette.action.active,\n                }}\n                primary=\"Logout\"\n              />\n            </Hidden>\n          </ListItem>\n          </List>\n          </Grid>\n          </Grid>\n      </Box>\n      )}\n        </>\n      )\n\n}\n\nexport default LeftSidebar1;","import { Typography, useTheme } from \"@mui/material\";\nimport { Button, Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\"\nimport { Link} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoggedUser, fetchUser} from \"../slices/userSlice\"\nimport { selectGolfBuddies, addGolfBuddy, deleteGolfBuddy } from \"../slices/golfBuddiesSlice\";\nimport {useEffect} from 'react'\n\n\n\n\nfunction FriendsSearch1({user}) {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const loggedUser = useSelector(selectLoggedUser);\n    const golfBuddies = useSelector(selectGolfBuddies);\n    const [searchDisabled, setSearchDisabled] = useState(false)\n    const [friendDisabled, setFriendDisabled] = useState(loggedUser.friends?.some(friend => friend.id === user.id))\n\n    useEffect(() => {\n      dispatch(fetchUser());\n    }, [dispatch]);\n\n    const friendIdsArray = []\n    loggedUser.friends?.map(friend => {   \n        return friendIdsArray.push(friend.id)\n    })\n\n    const handleDeleteFriend = () => {\n      const golfBuddyToDelete = golfBuddies.data?.find(golfBuddy => {\n        if ((golfBuddy.user_id === loggedUser.id) && (golfBuddy.friend_id === user.id)) {\n          return golfBuddy.id\n        } else\n          return undefined\n      })\n      dispatch(deleteGolfBuddy(golfBuddyToDelete.id))\n      setSearchDisabled(currentState => !currentState)\n      setFriendDisabled(currentState => !currentState)\n    \n    }\n  \n    const handleAddFriend = async () => {\n      try {\n        await dispatch(addGolfBuddy({ user_id: loggedUser.id, friend_id: user.id }));\n        setFriendDisabled(currentState => !currentState);\n        \n      } catch (error) {\n      console.error(error);\n      // handle error here\n    }\n  }\n\n  return (\n    <Box key={user.id} margin=\"1rem 0\">\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n        <Grid item>\n          <Grid container>\n            <Link to={`/profile/${user.id}`}>\n              <Grid item sx={{ paddingRight: \"1px\" }}>\n                <img src={user.profile_pic} width=\"50px\" alt=\"avatar\" />\n              </Grid>\n            </Link>\n            <Grid item>\n              <Grid container alignItems=\"center\">\n                <Grid item>\n                  <Typography sx={{ fontSize: \"16px\", fontWeight: \"500\" }}>\n                    {user.first_name} {user.last_name}\n                  </Typography>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Typography\n                      sx={{ fontSize: \"14px\", mr: \"6px\", color: \"#555\" }}\n                    >\n                        {user.username}\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n        <Button\n         disabled={searchDisabled}\n         onClick={friendDisabled ? handleDeleteFriend : handleAddFriend}\n          size=\"small\"\n          sx={{\n            borderRadius: theme.shape.borderRadius,\n            textTransform: \"capitalize\",\n            ml: \"12px\",\n            \"&:hover\": {\n              background: \"#333\",\n            },\n          }}\n          variant=\"contained\"\n          color={friendDisabled ? \"error\" : \"success\"}\n        >\n          {friendIdsArray.includes(user.id) ? \"Unfriend\" : \"Friend\"}\n        </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default FriendsSearch1;","import { Search } from \"@mui/icons-material\";\nimport { Grid, Input, Typography} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectAllUsers, selectLoggedUser } from \"../slices/userSlice\";\n\nimport FriendsSearch1 from \"./FriendSearch1\";\n\n\nfunction RightSidebar1() {\n    const [search, setSearch]=useState(\"\")\n    const allUsers = useSelector(selectAllUsers);\n    const loggedUser = useSelector(selectLoggedUser)\n\n    function handleChange(e){\n        setSearch(e.target.value)\n    }\n\n\n    const matchingUsers = allUsers.filter((user) =>\n    user.first_name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const renderUsers = matchingUsers\n    .filter((user) => user.id !== loggedUser.id)\n    .slice(0, 5)\n    .map((user) => (\n      <FriendsSearch1\n        key={user.id}\n        user={user}\n      />\n    ));\n\n    return (\n      <Box sx={{ height: \"100%\" }}>\n        <Grid container direction=\"column\" sx={{ height: \"100%\" }}>\n          <Grid item>\n            <Box paddingTop=\"10px\">\n              <Box\n                width=\"100%\"\n                borderRadius=\"28px\"\n                border=\"1px solid #eee\"\n                position=\"relative\"\n                sx={{\n                  background: \"#eee\",\n                }}\n              >\n                <Input\n                  type=\"text\"\n                  value={search}\n                  onChange={handleChange}\n                  inputProps={{\n                    style: { padding: \"10px\" },\n                  }}\n                 disableUnderline\n                  fullWidth\n                  placeholder=\"Search\"\n                  startAdornment={\n                    <Search\n                      sx={{\n                        paddingLeft: \"20px\",\n                        color: \"#777\",\n                      }}\n                    />\n                  }\n                />\n              </Box>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Box\n              sx={{\n                background: \"#eee\",\n                borderRadius: \"28px\",\n                padding: \"10px 20px\",\n                margin: \"1rem 0\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n                Friends Search\n              </Typography>\n              {renderUsers}\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  }\n  \n  export default RightSidebar1;","import { Box, Grid, Hidden } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\n\n// Import custom components\nimport LeftSidebar1 from \"./LeftSidebar1\";\nimport RightSidebar1 from \"./RightSidebar1\";\n\n// Component for the Main Layout\nexport default function Layout1 ({ children }) {\n\n    // This line uses the MUI theme to get breakpoints\n    const theme = useTheme();\n\n  \n    return (\n        <Box\n          sx={{\n            maxWidth: theme.breakpoints.values.lg,\n            margin: \"0 auto\",\n          }}\n        >\n          <Grid container sx={{\n          flexDirection: { xs: \"column-reverse\", lg: \"row\" },\n        }}>\n            <Grid item xs={12} lg={2}>\n              <LeftSidebar1 />\n            </Grid>\n            <Grid item xs={12} lg={10}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} lg={8}>\n                  <Box\n                    sx={{\n                      minHeight: \"calc(100vh - 120px)\",\n                      margin: \"0 1rem\",\n                      borderLeft: \"1px solid #ccc\",\n                      borderRight: \"1px solid #ccc\",\n                    }}\n                  >\n                      { children }\n                  </Box>\n                </Grid>\n\n                {/* This is a Hidden component that only renders on larger screens */}\n                <Hidden lgDown>\n                  <Grid item lg={4} sx={{ height: \"100vh\" }}>\n                    {/* This is the RightSidebar1 component, which has the Friends Search Bar*/}\n                    <RightSidebar1 />\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n    )\n}\n\n\n","import { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n//material-ui\n\nimport {\n    Box,\n    Button,\n    FormControl,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n} from '@mui/material';\n\n//third party\n\nimport { Formik } from 'formik';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser} from '../slices/userSlice';\n\n//assets\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst initialForm = {\n    username: \"\",\n    password: \"\",\n};\n\nexport default function LoginForm1() {\n    const [showPassword, setShowPassword] = useState(false);\n    const [loginAccount, setLoginAccount] = useState(initialForm);\n    const [errors, setErrors] = useState(null);\n    const history = useHistory();\n    \n\n    const dispatch = useDispatch();\n\n    function handleLoginChange(e) {\n        const target = e.target.name;\n        const value = e.target.value;\n        setLoginAccount({ ...loginAccount, [target]: value });\n    }\n\n    function handleLoginSubmit(e) {\n        e.preventDefault();\n      \n        dispatch(loginUser(loginAccount))\n          .then((result) => {\n            if (loginUser.fulfilled.match(result)) {\n              setErrors(null);\n              setLoginAccount(initialForm);\n              history.push('/');\n            } else if (loginUser.rejected.match(result)) {\n              setLoginAccount(initialForm);\n              setErrors(result.payload.error);\n            }\n          })\n      }\n\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Formik>\n                <form>\n                {errors ? <p style={{ color: \"red\" }}>{errors}</p> : null}\n                    <FormControl fullWidth sx={{padding: '2px'}} >\n                        <InputLabel htmlFor=\"outlined-adornment-username-login\">Username</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-username-login\"\n                            type=\"username\"\n                            name=\"username\"\n                            label=\"Username\"\n                            inputProps={{}}\n                            value={loginAccount.username}\n                            onChange={handleLoginChange}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth sx={{padding: '2px'}} >\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password-login\"\n                            type={showPassword ? 'text' : 'password'}\n                            name=\"password\"\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        size=\"small\"\n                                    >\n                                        {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label=\"Password\"\n                            value={loginAccount.password}\n                            onChange={handleLoginChange}\n                            inputProps={{}}\n                        />\n                    </FormControl>\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                        <Typography \n                            component={Link}\n                            to=\"/forgot_password\" \n                            variant=\"subtitle1\" \n                            color=\"success.light\" \n                            sx={{ textDecoration: 'none', cursor: 'pointer' }}\n                        >\n                            Forgot Password?\n                        </Typography>\n                    </Stack>\n                        \n                        <Box sx={{ mt: 2 }}>\n                            \n                                <Button\n                                    disableElevation\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    borderRadius= '12px'\n                                    onClick={handleLoginSubmit}\n                                >\n                                    Sign in\n                                </Button>\n\n                        </Box>\n                    </form>\n                    </Formik>\n          </>\n\n    )\n\n\n\n\n}\n\n","\n\n// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst LoginWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: '#f1f8e9',\n    minHeight: '100vh'\n}));\n\nexport default LoginWrapper;","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\n\n\nimport LoginForm1 from './LoginForm1';\nimport LoginWrapper from './LoginWrapper';\n\nfunction LoginPage1() {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n       <LoginWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                                borderRadius: '12px',\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to sign in\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <LoginForm1 />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/register\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don&apos;t have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper>\n\n    )\n\n}\n\nexport default LoginPage1","import { useState } from \"react\";\nimport {useTheme} from '@mui/material/styles'\nimport { useHistory } from \"react-router-dom\";\n\n//material-ui\n\nimport {\n    Grid,\n    TextField,\n    Box,\n    Button,\n    FormControl,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n} from '@mui/material';\n\n//third party\n\nimport { Formik } from 'formik';\n\nimport { useDispatch } from 'react-redux';\nimport { registerUser} from '../slices/userSlice';\n\n//assets\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst initialForm = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n  }\n\n\nfunction RegisterForm1() {\n    const theme = useTheme();\n    const [showPassword, setShowPassword] = useState(false);\n    const [createAccountForm, setCreateAccountForm] = useState(initialForm);\n    const [errors, setErrors] = useState(null);\n    const history = useHistory();\n    \n\n    const dispatch = useDispatch();\n  \n    \n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    function handleCreateChange(e) {\n        const target = e.target.name;\n        const value = e.target.value;\n        setCreateAccountForm({ ...createAccountForm, [target]: value });\n      }\n\n      function handleCreateSubmit(e) {\n        e.preventDefault();\n      \n        dispatch(registerUser(createAccountForm)).then((result) => {\n          if (registerUser.fulfilled.match(result)) {\n            setErrors(null);\n            setCreateAccountForm(initialForm);\n            history.push('/');\n          } else if (registerUser.rejected.match(result)) {\n            setCreateAccountForm(initialForm);\n            setErrors(result.payload.errors);\n          }\n        });\n      }\n\n   \n    return (\n        <>\n            \n            <Formik>\n                    <form noValidate onSubmit={handleCreateSubmit} >\n                    {errors &&\n                    errors.map((error, index) => (\n                        <p key={index} style={{ color: \"red\" }}>\n                            {error}\n                        </p>\n                        ))}\n                    <Grid container spacing={1} sx={{padding: '4px'}}>\n                            <Grid item xs={12} sm={6} >\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"first_name\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                    value={createAccountForm.first_name}\n                                    onChange={handleCreateChange}\n                    \n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"last_name\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                    value={createAccountForm.last_name}\n                                    onChange={handleCreateChange}\n                                    />\n                            </Grid>\n                        </Grid>\n                        \n                            <FormControl fullWidth sx={{padding: '4px'}} >\n                             <InputLabel >Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                name=\"email\"\n                                label=\"Email Address\"\n                                value={createAccountForm.email}\n                                onChange={handleCreateChange}\n                                \n                            />\n                            </FormControl>\n\n                        <FormControl fullWidth sx={{padding: '4px'}}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"username\"\n                                name=\"username\"\n                                label=\"Username\"\n                                value={createAccountForm.username}\n                                onChange={handleCreateChange}\n                                \n                            />\n                        </FormControl>\n                        <FormControl fullWidth sx={{padding: '4px'}}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                name=\"password\"\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"small\"\n                                        >\n                                            {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                value={createAccountForm.password}\n                                onChange={handleCreateChange}\n                            />\n                            </FormControl>\n                        <Box sx={{ mt: 2 }}>\n                            \n                                <Button\n                                    disableElevation\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                >\n                                    Sign in\n                                </Button>\n\n                        </Box>\n                    </form>\n                    </Formik>\n          </>\n\n    )\n\n\n\n\n}\n\nexport default RegisterForm1;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\nimport RegisterForm1 from './RegisterForm1';\nimport LoginWrapper from './LoginWrapper';\n\nfunction RegisterPage1() {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n       <LoginWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign Up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RegisterForm1 />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                               Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper>\n\n    )\n\n}\n\nexport default RegisterPage1","import { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\n//material-ui\n\nimport {\n    Box,\n    Button,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n} from '@mui/material';\n\nimport { Formik } from 'formik';\n\nconst initialForm = {\n    email: \"\",\n  }\n\n\nfunction ForgotPasswordForm1() {\n    const[forgotPassword, setForgotPassword]=useState(initialForm)\n    const [errors, setErrors] = useState(null);\n    const history = useHistory();\n\n    function handleForgotPasswordChange(e) {\n        const target = e.target.name;\n        const value = e.target.value;\n        setForgotPassword({ ...forgotPassword, [target]: value });\n      }\n\n    const handleSubmit = (e) => {\n            e.preventDefault()\n\n            fetch('/api/forgot_password', {\n                credentials: \"include\",\n                method: \"POST\",\n                headers: {\n                \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(forgotPassword)\n            }).then((r) => {\n                if (r.ok) {\n                       \n                    setErrors(null);\n                    setForgotPassword(initialForm);\n                    history.push(\"/reset_password\");\n    \n                } else {\n                  r.json().then((err) => {\n                    setForgotPassword(initialForm);\n                    setErrors(err);\n                  });\n                }\n              });\n            }\n\n    return(\n\n        <>\n            <Formik>\n                    <form>\n                        <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                name=\"email\"\n                                label=\"Email\"\n                                inputProps={{}}\n                                value={forgotPassword.email}\n                                onChange={handleForgotPasswordChange} \n                            />\n                        </FormControl>\n                        {errors ? <p>{errors.error}</p> : null}\n                        <Box sx={{ mt: 2 }}>\n                                <Button\n                                    disableElevation\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    borderRadius= '12px'\n                                    onClick={handleSubmit}\n                                >\n                                    Send Mail\n                                </Button>\n                        </Box>\n                    </form>\n            </Formik>\n          </>\n\n    )\n}\n\nexport default ForgotPasswordForm1;","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\nimport ForgotPasswordForm1 from './ForgotPasswordForm1';\nimport LoginWrapper from './LoginWrapper';\n\nfunction ForgotPasswordPage1() {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return(\n        <LoginWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Forgot Password?\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your email address to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <ForgotPasswordForm1 />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                               Back to Sign In?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper>\n        \n\n\n\n    )\n}\n\nexport default ForgotPasswordPage1;","import { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\n//material-ui\n\nimport {\n    Box,\n    Button,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    IconButton,\n    InputAdornment,\n} from '@mui/material';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport { Formik } from 'formik';\n\nconst initialForm = {\n    token: \"\",\n    email: \"\",\n    password: \"\",\n  }\n\n\nfunction ResetPasswordForm1() {\n    const [showPassword, setShowPassword] = useState(false);\n    const[resetPassword, setResetPassword]=useState(initialForm)\n    const [errors, setErrors] = useState(null);\n    const history = useHistory();\n\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    function handleResetPasswordChange(e) {\n        const target = e.target.name;\n        const value = e.target.value;\n        setResetPassword({ ...resetPassword, [target]: value });\n      }\n\n    const handleSubmit = (e) => {\n            e.preventDefault()\n\n            fetch('/api/reset_password', {\n                credentials: \"include\",\n                method: \"POST\",\n                headers: {\n                \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(resetPassword)\n            }).then((r) => {\n                if (r.ok) {\n                    r.json().then((user) => {\n                    setErrors(null);\n                    setResetPassword(initialForm);\n                    history.push(\"/login\");\n                });\n                } else {\n                  r.json().then((err) => {\n                    setResetPassword(initialForm);\n                    setErrors(err);\n                  });\n                }\n              });\n            }\n\n    return(\n\n        <>\n            <Formik>\n                    <form>\n                    <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Token</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"token\"\n                                name=\"token\"\n                                label=\"Token\"\n                                inputProps={{}}\n                                value={resetPassword.token}\n                                onChange={handleResetPasswordChange} \n                            />\n                        </FormControl>\n                        <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                name=\"email\"\n                                label=\"Email\"\n                                inputProps={{}}\n                                value={resetPassword.email}\n                                onChange={handleResetPasswordChange} \n                            />\n                        </FormControl>\n                        <FormControl fullWidth sx={{padding: '2px'}} >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">New Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                name=\"password\"\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"small\"\n                                        >\n                                            {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                value={resetPassword.password}\n                                onChange={handleResetPasswordChange}\n                                inputProps={{}}\n                                \n                            />\n                            </FormControl>\n                        {errors ? <p>{errors.error}</p> : null}\n                        <Box sx={{ mt: 2 }}>\n                                <Button\n                                    disableElevation\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"success\"\n                                    borderRadius= '12px'\n                                    onClick={handleSubmit}\n                                >\n                                    Reset Password\n                                </Button>\n                        </Box>\n                    </form>\n            </Formik>\n          </>\n\n    )\n}\n\nexport default ResetPasswordForm1;","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Card, Box } from '@mui/material';\nimport ResetPasswordForm1 from './ResetPasswordForm1';\nimport LoginWrapper from './LoginWrapper';\n\nfunction ResetPasswordPage1() {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return(\n        <LoginWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                        <Card sx={{\n                                maxWidth: { xs: 400, lg: 475 },\n                                margin: { xs: 2.5, md: 3 },\n                                '& > *': {\n                                    flexGrow: 1,\n                                    flexBasis: '50%'\n                                },\n                                border: '1px solid',\n                                borderColor: theme.palette.success[200] + 75,\n                                ':hover': {\n                                    boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\n                                },\n                            }}>\n                         <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.success.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Reset Password\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Use the token from your email to reset your password\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <ResetPasswordForm1 />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/login\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                               Back to Sign In?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                </Box>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            </LoginWrapper>\n        \n        )\n    }\n    \n    export default ResetPasswordPage1;","// Import dependencies\nimport React, { useEffect } from \"react\";\nimport { Route, Switch} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUser, fetchAllUsers, selectLoggedUser} from \"./slices/userSlice\";\nimport { fetchRounds, selectRounds } from \"./slices/roundsSlice\";\nimport { fetchGolfBuddies, selectGolfBuddies } from \"./slices/golfBuddiesSlice\";\nimport { fetchComments, selectComments } from \"./slices/commentsSlice\";\n\n// Import components\nimport MainPage1 from \"../redux/redux_pages/MainPage1\";\nimport GolfBuddies1 from \"./redux_pages/GolfBuddies1\";\nimport Profile1 from \"./redux_pages/Profile1\";\nimport MyAccount1 from \"./redux_pages/MyAccount1\";\nimport Layout1 from \"./redux_components/Layout1\";\n\n//Import MaterialUI for loading\nimport { Box, LinearProgress } from \"@mui/material\";\n\n//Import Auth\nimport LoginPage1 from \"../redux/redux_auth/LoginPage1\";\nimport RegisterPage1 from \"./redux_auth/RegisterPage1\";\nimport ForgotPasswordPage1 from \"./redux_auth/ForgotPasswordPage1\";\nimport ResetPasswordPage1 from \"./redux_auth/ResetPasswordPage1\";\n\n\n\n// Define functional component \"App1\"\nexport default function App1() {\n  // Define useDispatch hook\n  const dispatch = useDispatch();\n\n  // Call the useEffect hook to dispatch actions to fetch user, rounds and golfBuddies data\n  useEffect(() => {\n    dispatch(fetchUser());\n    dispatch(fetchAllUsers());\n    dispatch(fetchRounds());\n    dispatch(fetchGolfBuddies());\n    dispatch(fetchComments());\n    \n  \n  }, [dispatch]);\n\n\n  // Use useSelector hook to select user, rounds and golfBuddies data\n  const loggedUser = useSelector(selectLoggedUser);\n  const rounds = useSelector(selectRounds);\n  const golfBuddies = useSelector(selectGolfBuddies);\n  const comments = useSelector(selectComments)\n  const isLoggedIn = loggedUser && !loggedUser.error;\n\n\n  // Handle cases when data is still loading\n  if ( rounds.loading || golfBuddies.loading || comments.loading) {\n    return <Box sx={{width: '100%'}}>\n            <LinearProgress color=\"success\"/>\n           </Box>;\n  }\n\n  // If user is logged in, display appropriate pages\n  return (\n    \n    <div className=\"App\">\n      { !isLoggedIn ? (\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage1 />\n          </Route>\n          <Route exact path=\"/\">\n            <LoginPage1 />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage1 />\n          </Route>\n          <Route path=\"/forgot_password\">\n            <ForgotPasswordPage1 />\n          </Route>\n          <Route path=\"/reset_password\">\n            <ResetPasswordPage1 />\n          </Route>\n          <Route path=\"*\">\n            <h2>404 Error Not Found</h2>\n          </Route>\n        </Switch>\n      ) : (\n        <Layout1 >\n          <Switch>\n              <Route exact path=\"/\">\n                <MainPage1 />\n              </Route>\n              <Route exact path=\"/friends\">\n                <GolfBuddies1 />\n              </Route>\n              <Route exact path=\"/myaccount\">\n                <MyAccount1 />\n              </Route>\n              <Route exact path=\"/profile/:id\">\n                <Profile1 loggedUser={loggedUser}/>\n              </Route>\n            <Route exact path=\"*\">\n              <h2>404 Error Not Found</h2>\n            </Route>\n          </Switch>\n        </Layout1>\n      )}\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Import necessary modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\n\n// Import the main app components\nimport App from './App';\nimport App1 from './redux/App1';\n\n// Import function to report web vitals\nimport reportWebVitals from './reportWebVitals';\n\n// Import BrowserRouter for routing\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n// Render the main app component inside the Provider component and pass in the Redux store\n// Wrap the BrowserRouter component around the main app component for routing\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n    <App1 />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Function to report web vitals\nreportWebVitals();\n"],"sourceRoot":""}